{"ast":null,"code":"export const required = value => value || typeof value == \"number\" && value === 0 ? undefined : \"This field is required\";\nexport const number = value => value && isNaN(Number(value)) ? \"Must be a number\" : undefined;\nexport const digit = value => value && !/^[0-9]*$/.test(value) ? \"Must be a number\" : undefined;\n\nconst maxLength = max => value => value && value.length > max ? `Must be ${max} characters or less` : undefined;\n\nexport const maxLengthMobileNo = maxLength(10);\nexport const maxLength20 = maxLength(20);\nexport const maxLength50 = maxLength(50);\nexport const maxLength1000 = maxLength(1000);\n\nconst minLength = min => value => value && value.length < min ? `Must be ${min} characters or more` : undefined;\n\nexport const minLengthMobileNo = minLength(10);\nexport const minLength8 = minLength(8);\n\nconst maxValue = max => value => value && value > max ? `Must be at least ${max} or less` : undefined;\n\nexport const maxValueMobile = maxValue(9999999999);\n\nconst minValue = min => value => value !== undefined && value !== null && value !== \"\" && value < min ? `Must be at least ${min}` : undefined;\n\nexport const minValueMobile = minValue(9999999999);\nexport const minValue10 = minValue(10);\nexport const minValue0 = minValue(0);\nexport const email = value => value && !/^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/i.test(value) ? \"Invalid email address\" : undefined;\nexport const name = value => value && !/^[a-zA-Z\\s]*$/i.test(value) ? \"Invalid name\" : undefined;\nexport const passwordPattern = value => value && !/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+\\-=[\\]{}|:;\"'<>,.?\\\\/]).{8,20}$/.test(value) ? \"Password must be 8-20 characters long and contain at least one digit, one lowercase letter, one uppercase letter, and one special character.\" : undefined;","map":{"version":3,"names":["required","value","undefined","number","isNaN","Number","digit","test","maxLength","max","length","maxLengthMobileNo","maxLength20","maxLength50","maxLength1000","minLength","min","minLengthMobileNo","minLength8","maxValue","maxValueMobile","minValue","minValueMobile","minValue10","minValue0","email","name","passwordPattern"],"sources":["C:/Users/sresh/OneDrive/Desktop/ecom/src/components/account/SignUpForm.jsx"],"sourcesContent":["export const required = (value) =>\n  value || (typeof value == \"number\" && value === 0)\n    ? undefined\n    : \"This field is required\";\nexport const number = (value) =>\n  value && isNaN(Number(value)) ? \"Must be a number\" : undefined;\nexport const digit = (value) =>\n  value && !/^[0-9]*$/.test(value) ? \"Must be a number\" : undefined;\nconst maxLength = (max) => (value) =>\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\nexport const maxLengthMobileNo = maxLength(10);\nexport const maxLength20 = maxLength(20);\nexport const maxLength50 = maxLength(50);\nexport const maxLength1000 = maxLength(1000);\nconst minLength = (min) => (value) =>\n  value && value.length < min ? `Must be ${min} characters or more` : undefined;\n  export const minLengthMobileNo = minLength(10);\nexport const minLength8 = minLength(8);\nconst maxValue = (max) => (value) =>\n  value && value > max ? `Must be at least ${max} or less` : undefined;\nexport const maxValueMobile = maxValue(9999999999);\nconst minValue = (min) => (value) =>\n  value !== undefined && value !== null && value !== \"\" && value < min\n    ? `Must be at least ${min}`\n    : undefined;\nexport const minValueMobile = minValue(9999999999);\nexport const minValue10 = minValue(10);\nexport const minValue0 = minValue(0);\nexport const email = (value) =>\n  value && !/^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/i.test(value)\n    ? \"Invalid email address\"\n    : undefined;\nexport const name = (value) =>\n  value && !/^[a-zA-Z\\s]*$/i.test(value) ? \"Invalid name\" : undefined;\n  export const passwordPattern = value => \n  value && !/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+\\-=[\\]{}|:;\"'<>,.?\\\\/]).{8,20}$/.test(value) ? \"Password must be 8-20 characters long and contain at least one digit, one lowercase letter, one uppercase letter, and one special character.\" : undefined;"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,KAAD,IACtBA,KAAK,IAAK,OAAOA,KAAP,IAAgB,QAAhB,IAA4BA,KAAK,KAAK,CAAhD,GACIC,SADJ,GAEI,wBAHC;AAIP,OAAO,MAAMC,MAAM,GAAIF,KAAD,IACpBA,KAAK,IAAIG,KAAK,CAACC,MAAM,CAACJ,KAAD,CAAP,CAAd,GAAgC,kBAAhC,GAAqDC,SADhD;AAEP,OAAO,MAAMI,KAAK,GAAIL,KAAD,IACnBA,KAAK,IAAI,CAAC,WAAWM,IAAX,CAAgBN,KAAhB,CAAV,GAAmC,kBAAnC,GAAwDC,SADnD;;AAEP,MAAMM,SAAS,GAAIC,GAAD,IAAUR,KAAD,IACzBA,KAAK,IAAIA,KAAK,CAACS,MAAN,GAAeD,GAAxB,GAA+B,WAAUA,GAAI,qBAA7C,GAAoEP,SADtE;;AAEA,OAAO,MAAMS,iBAAiB,GAAGH,SAAS,CAAC,EAAD,CAAnC;AACP,OAAO,MAAMI,WAAW,GAAGJ,SAAS,CAAC,EAAD,CAA7B;AACP,OAAO,MAAMK,WAAW,GAAGL,SAAS,CAAC,EAAD,CAA7B;AACP,OAAO,MAAMM,aAAa,GAAGN,SAAS,CAAC,IAAD,CAA/B;;AACP,MAAMO,SAAS,GAAIC,GAAD,IAAUf,KAAD,IACzBA,KAAK,IAAIA,KAAK,CAACS,MAAN,GAAeM,GAAxB,GAA+B,WAAUA,GAAI,qBAA7C,GAAoEd,SADtE;;AAEE,OAAO,MAAMe,iBAAiB,GAAGF,SAAS,CAAC,EAAD,CAAnC;AACT,OAAO,MAAMG,UAAU,GAAGH,SAAS,CAAC,CAAD,CAA5B;;AACP,MAAMI,QAAQ,GAAIV,GAAD,IAAUR,KAAD,IACxBA,KAAK,IAAIA,KAAK,GAAGQ,GAAjB,GAAwB,oBAAmBA,GAAI,UAA/C,GAA2DP,SAD7D;;AAEA,OAAO,MAAMkB,cAAc,GAAGD,QAAQ,CAAC,UAAD,CAA/B;;AACP,MAAME,QAAQ,GAAIL,GAAD,IAAUf,KAAD,IACxBA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAAjC,IAAyCA,KAAK,KAAK,EAAnD,IAAyDA,KAAK,GAAGe,GAAjE,GACK,oBAAmBA,GAAI,EAD5B,GAEId,SAHN;;AAIA,OAAO,MAAMoB,cAAc,GAAGD,QAAQ,CAAC,UAAD,CAA/B;AACP,OAAO,MAAME,UAAU,GAAGF,QAAQ,CAAC,EAAD,CAA3B;AACP,OAAO,MAAMG,SAAS,GAAGH,QAAQ,CAAC,CAAD,CAA1B;AACP,OAAO,MAAMI,KAAK,GAAIxB,KAAD,IACnBA,KAAK,IAAI,CAAC,oDAAoDM,IAApD,CAAyDN,KAAzD,CAAV,GACI,uBADJ,GAEIC,SAHC;AAIP,OAAO,MAAMwB,IAAI,GAAIzB,KAAD,IAClBA,KAAK,IAAI,CAAC,iBAAiBM,IAAjB,CAAsBN,KAAtB,CAAV,GAAyC,cAAzC,GAA0DC,SADrD;AAEL,OAAO,MAAMyB,eAAe,GAAG1B,KAAK,IACpCA,KAAK,IAAI,CAAC,mFAAmFM,IAAnF,CAAwFN,KAAxF,CAAV,GAA2G,8IAA3G,GAA4PC,SADrP"},"metadata":{},"sourceType":"module"}