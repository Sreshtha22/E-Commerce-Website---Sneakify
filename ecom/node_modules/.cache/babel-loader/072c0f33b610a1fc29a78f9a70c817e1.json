{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sresh\\\\OneDrive\\\\Desktop\\\\ecom\\\\src\\\\components\\\\ContactUsForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { compose } from \"redux\";\nimport { useState } from \"react\";\nimport { renderFormGroupField, renderFormTextArea } from \"../helpers/renderForm\";\nimport { required, maxLength50, name, maxLengthMobileNo, minLengthMobileNo, digit, email, maxLength1000 } from \"../helpers/validation\";\nimport { contactUs } from \"../api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: '',\n  phno: '',\n  email: '',\n  msg: ''\n};\n\nconst ContactUsForm = props => {\n  _s();\n\n  const [contact, setContact] = useState(initialValues);\n  const [isError, setIsError] = useState(false);\n  const [isEmailNotValid, setIsEmailNotValid] = useState(false);\n  const [isSentMsg, setIsSentMsg] = useState(false);\n\n  const onValueChange = e => {\n    setContact({ ...contact,\n      [e.target.name]: e.target.value\n    });\n    console.log(contact);\n  };\n\n  const addContact = async e => {\n    e.preventDefault();\n\n    try {\n      await contactUs(contact);\n      setIsSentMsg(true);\n      setIsError(false);\n      setIsEmailNotValid(false);\n      setTimeout(() => {\n        setIsSentMsg(false);\n        props.reset();\n      }, 2000);\n    } catch (error) {\n      setIsSentMsg(false);\n\n      if (error.message === 'Invalid email address') {\n        setIsEmailNotValid(true);\n        setTimeout(() => {\n          props.reset();\n        }, 2000);\n      } else {\n        setIsError(true);\n        setTimeout(() => {\n          setIsError(false);\n          props.reset();\n        }, 2000);\n      }\n    }\n  };\n\n  const {\n    submitting,\n    submitFailed\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addContact,\n      className: `needs-validation ${submitFailed ? \"was-validated\" : \"\"}`,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"name\",\n            type: \"text\",\n            label: \"Name\",\n            title: \"Please enter your name\",\n            component: renderFormGroupField,\n            placeholder: \"Enter full name\",\n            required: true,\n            validate: [required, name],\n            pattern: \"[a-zA-Z\\\\s]*\",\n            className: \"mb-3\",\n            onChange: e => onValueChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"phno\",\n            type: \"tel\",\n            label: \"Mobile No.\",\n            title: \"Please enter your valid mobile number\",\n            component: renderFormGroupField,\n            placeholder: \"Enter mobile no. without country code\",\n            validate: [required, maxLengthMobileNo, minLengthMobileNo, digit],\n            required: true,\n            pattern: \"^[0-9]{10,10}$\",\n            max: \"9999999999\",\n            min: \"9999999999\",\n            className: \"mb-3\",\n            onChange: e => onValueChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"email\",\n            type: \"email\",\n            label: \"Email address\",\n            component: renderFormGroupField,\n            title: \"Please enter your valid email address\",\n            placeholder: \"Enter email address\",\n            pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\",\n            validate: [required, maxLength50, email],\n            required: true,\n            className: \"mb-3\",\n            onChange: e => onValueChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row g-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"msg\",\n            label: \"Message\",\n            component: renderFormTextArea,\n            validate: maxLength1000,\n            placeholder: \"What are you looking for?\",\n            onChange: e => onValueChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this), isError && /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-center text-danger\",\n        children: \"Failed to Send Message!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }, this), isEmailNotValid && /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-center\",\n        children: \"Invalid email address!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 27\n      }, this), isSentMsg && /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-center text-success\",\n        children: \"Successfully Sent Message!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid\",\n        style: {\n          marginTop: '14px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-3\",\n          disabled: submitting,\n          onClick: () => addContact(),\n          style: {\n            backgroundColor: \"black\",\n            border: \"1px solid black\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactUsForm, \"IHCFW8zOdeCinkqUo8EB/rRdRQc=\");\n\n_c = ContactUsForm;\nexport default compose(reduxForm({\n  form: \"Contactus\"\n}))(ContactUsForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactUsForm\");","map":{"version":3,"names":["React","Field","reduxForm","compose","useState","renderFormGroupField","renderFormTextArea","required","maxLength50","name","maxLengthMobileNo","minLengthMobileNo","digit","email","maxLength1000","contactUs","initialValues","phno","msg","ContactUsForm","props","contact","setContact","isError","setIsError","isEmailNotValid","setIsEmailNotValid","isSentMsg","setIsSentMsg","onValueChange","e","target","value","console","log","addContact","preventDefault","setTimeout","reset","error","message","submitting","submitFailed","marginTop","backgroundColor","border","form"],"sources":["C:/Users/sresh/OneDrive/Desktop/ecom/src/components/ContactUsForm.jsx"],"sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { compose } from \"redux\";\nimport { useState } from \"react\";\nimport {\n  renderFormGroupField,\n  renderFormTextArea,\n} from \"../helpers/renderForm\";\nimport {\n  required,\n  maxLength50,\n  name,\n  maxLengthMobileNo,\n  minLengthMobileNo,\n  digit,\n  email,\n  maxLength1000,\n} from \"../helpers/validation\";\nimport { contactUs } from \"../api.js\";\nconst initialValues = {\n  name: '',\n  phno: '',\n  email: '',\n  msg: ''\n}\nconst ContactUsForm = (props) => {\n  const [contact, setContact] = useState(initialValues)\n  const [isError, setIsError] = useState(false);\n  const [isEmailNotValid, setIsEmailNotValid] = useState(false);\n  const [isSentMsg, setIsSentMsg] = useState(false);\n  const onValueChange = (e) => {\n    setContact({ ...contact, [e.target.name]: e.target.value })\n    console.log(contact)\n  }\n  const addContact=async(e)=>{\n    e.preventDefault();\n    try {\n      await contactUs(contact);\n      setIsSentMsg(true);\n      setIsError(false);\n      setIsEmailNotValid(false);\n      setTimeout(() => {\n        setIsSentMsg(false);\n        props.reset();\n      }, 2000);\n    } catch (error) {\n      setIsSentMsg(false);\n      if (error.message === 'Invalid email address') {\n        setIsEmailNotValid(true);\n        setTimeout(() => {\n          props.reset();\n        }, 2000);\n      } else {\n        setIsError(true);\n        setTimeout(() => {\n          setIsError(false); \n          props.reset();\n        }, 2000);\n      }  \n    }\n  };\n  const {submitting, submitFailed } = props;\n  return (\n    <div>\n    <form\n      onSubmit={addContact}\n      className={`needs-validation ${submitFailed ? \"was-validated\" : \"\"}`}\n      noValidate\n    >\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            label=\"Name\"\n            title=\"Please enter your name\"\n            component={renderFormGroupField}\n            placeholder=\"Enter full name\"\n            required={true}\n            validate={[required, name]}\n            pattern=\"[a-zA-Z\\s]*\"\n            className=\"mb-3\"\n            onChange={(e)=> onValueChange(e)}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <Field\n            name=\"phno\"\n            type=\"tel\"\n            label=\"Mobile No.\"\n            title=\"Please enter your valid mobile number\"\n            component={renderFormGroupField}\n            placeholder=\"Enter mobile no. without country code\"\n            validate={[required, maxLengthMobileNo, minLengthMobileNo, digit]}\n            required={true}\n            pattern=\"^[0-9]{10,10}$\"\n            max=\"9999999999\"\n            min=\"9999999999\"\n            className=\"mb-3\"\n            onChange={(e)=> onValueChange(e)}\n          />\n        </div>\n        <div className=\"col-md-6\">\n          <Field\n            name=\"email\"\n            type=\"email\"\n            label=\"Email address\"\n            component={renderFormGroupField}\n            title=\"Please enter your valid email address\"\n            placeholder=\"Enter email address\"\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n            validate={[required, maxLength50, email]}\n            required={true}\n            className=\"mb-3\"\n            onChange={(e)=> onValueChange(e)}\n          />\n        </div>\n      </div>\n      <div className=\"row g-3\">\n        <div className=\"col-md-12\">\n          <Field\n            name=\"msg\"\n            label=\"Message\"\n            component={renderFormTextArea}\n            validate={maxLength1000}\n            placeholder=\"What are you looking for?\"\n            onChange={(e)=> onValueChange(e)}\n          />\n        </div>\n      </div>\n      <br></br>\n      {isError && <h6 className=\"text-center text-danger\">Failed to Send Message!</h6>}\n      {isEmailNotValid && <h6 className=\"text-center\">Invalid email address!</h6>}\n      {isSentMsg && <h6 className=\"text-center text-success\">Successfully Sent Message!</h6>}\n      <div className=\"d-grid\" style={{marginTop:'14px'}}>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary mt-3\"\n          disabled={submitting}\n          onClick={()=>addContact()}\n          style={{backgroundColor:\"black\", border:\"1px solid black\"}}\n        >\n          Submit\n        </button>\n      </div>\n    </form>\n    </div>\n  );\n};\nexport default compose(\n  reduxForm({\n    form: \"Contactus\",\n  })\n)(ContactUsForm);"],"mappings":"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"},"metadata":{},"sourceType":"module"}