{"ast":null,"code":"import axios from \"axios\";\nconst userUrl = 'http://localhost:8090';\nexport const signupCust = async cust => {\n  try {\n    const response = await axios.post(`${userUrl}/cust`, cust);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 409) {\n      console.log('Error while calling signupCust Api ', error.message);\n      throw new Error('Email already exists');\n    } else {\n      console.log('Error while calling signupCust Api ', error.message);\n      throw new Error('Failed to Sign Up. Please try again later.');\n    }\n  }\n};\nexport const signinUser = async cust => {\n  try {\n    const response = await axios.post(`${userUrl}/cust`, cust);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      console.log('Error while signin in: Invalid credentials');\n      throw new Error('Invalid email or password');\n    } else {\n      console.log('Error while signin in: ', error.message);\n      throw new Error('Failed to Sign In. Please try again.');\n    }\n  }\n};\nexport const contactUs = async contact => {\n  try {\n    const response = await axios.post(`${userUrl}/contact`, contact);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 409) {\n      console.log('Error while calling contactUs Api ', error.message);\n      throw new Error('Invalid email address');\n    } else {\n      console.log('Error while calling contactUs Api ', error.message);\n      throw new Error('Failed to send message. Please try again later.');\n    }\n  }\n};\nexport const checkOut = async checkout => {\n  try {\n    const response = await axios.post(`${userUrl}/checkout`, checkout);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 409) {\n      console.log('Error while calling checkOut Api ', error.message);\n      throw new Error('Failed to Order Place. Please try again.');\n    } else {\n      console.log('Error while calling checkOut Api ', error.message);\n      throw new Error('Failed to Order Place. Please try again later.');\n    }\n  }\n};\nexport const addProduct = async product => {\n  try {\n    const response = await axios.post(`${userUrl}/product`, product, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error while calling addProduct API ', error.message);\n    throw new Error('Failed to add product. Please try again later.');\n  }\n};\nexport const fetchContacts = async () => {\n  try {\n    const response = await fetch(`${userUrl}/contacts`);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch data');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n};\nexport const updateQueryStatus = async (queryId, newStatus) => {\n  try {\n    const response = await fetch(`${userUrl}/updateQueryStatus/${queryId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ans: newStatus\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to update query status');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error updating query status:', error);\n    throw error;\n  }\n};\nexport const fetchProducts = async () => {\n  try {\n    const response = await fetch(`${userUrl}/products`);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch data');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n};\nexport const deleteProduct = async productId => {\n  try {\n    const response = await axios.delete(`${userUrl}/product/${productId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error while calling deleteProduct API ', error.message);\n    throw new Error('Failed to delete product. Please try again later.');\n  }\n};","map":{"version":3,"names":["axios","userUrl","signupCust","cust","response","post","data","error","status","console","log","message","Error","signinUser","contactUs","contact","checkOut","checkout","addProduct","product","headers","fetchContacts","fetch","ok","json","updateQueryStatus","queryId","newStatus","method","body","JSON","stringify","ans","fetchProducts","deleteProduct","productId","delete"],"sources":["C:/Users/sresh/OneDrive/Desktop/ecom/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\nconst userUrl = 'http://localhost:8090';\r\n\r\nexport const signupCust = async (cust) => {\r\n    try {\r\n        const response = await axios.post(`${userUrl}/cust`, cust);\r\n        return response.data;\r\n    } catch (error) {\r\n        if (error.response && error.response.status === 409) {\r\n            console.log('Error while calling signupCust Api ', error.message);\r\n            throw new Error('Email already exists');\r\n        }\r\n        else {\r\n            console.log('Error while calling signupCust Api ', error.message);\r\n            throw new Error('Failed to Sign Up. Please try again later.');\r\n        }\r\n    }\r\n}\r\n\r\nexport const signinUser = async (cust) => {\r\n    try {\r\n        const response = await axios.post(`${userUrl}/cust`, cust);\r\n        return response.data;\r\n    } catch (error) {\r\n        if (error.response && error.response.status === 401) {\r\n            console.log('Error while signin in: Invalid credentials');\r\n            throw new Error('Invalid email or password');\r\n        } else {\r\n            console.log('Error while signin in: ', error.message);\r\n            throw new Error('Failed to Sign In. Please try again.');\r\n        }\r\n    }\r\n}\r\n\r\nexport const contactUs = async (contact) => {\r\n    try {\r\n        const response = await axios.post(`${userUrl}/contact`, contact);\r\n        return response.data;\r\n    } catch (error) {\r\n        if (error.response && error.response.status === 409) {\r\n            console.log('Error while calling contactUs Api ', error.message);\r\n            throw new Error('Invalid email address');\r\n        } else {\r\n            console.log('Error while calling contactUs Api ', error.message);\r\n            throw new Error('Failed to send message. Please try again later.');\r\n        }\r\n    }\r\n}\r\n\r\nexport const checkOut = async (checkout) => {\r\n    try {\r\n        const response = await axios.post(`${userUrl}/checkout`, checkout);\r\n        return response.data;\r\n    } catch (error) {\r\n        if (error.response && error.response.status === 409) {\r\n            console.log('Error while calling checkOut Api ', error.message);\r\n            throw new Error('Failed to Order Place. Please try again.');\r\n        } \r\n        else {\r\n            console.log('Error while calling checkOut Api ', error.message);\r\n            throw new Error('Failed to Order Place. Please try again later.');\r\n        }\r\n    }\r\n}\r\n\r\nexport const addProduct = async (product) => {\r\n    try {\r\n        const response = await axios.post(`${userUrl}/product`, product, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error while calling addProduct API ', error.message);\r\n        throw new Error('Failed to add product. Please try again later.');\r\n    }\r\n}\r\n\r\nexport const fetchContacts = async () => {\r\n    try {\r\n        const response = await fetch(`${userUrl}/contacts`);\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch data');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateQueryStatus = async (queryId, newStatus) => {\r\n    try {\r\n        const response = await fetch(`${userUrl}/updateQueryStatus/${queryId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ ans: newStatus })\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Failed to update query status');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error updating query status:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const fetchProducts = async () => {\r\n    try {\r\n        const response = await fetch(`${userUrl}/products`);\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch data');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteProduct = async (productId) => {\r\n    try {\r\n        const response = await axios.delete(`${userUrl}/product/${productId}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error while calling deleteProduct API ', error.message);\r\n        throw new Error('Failed to delete product. Please try again later.');\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}