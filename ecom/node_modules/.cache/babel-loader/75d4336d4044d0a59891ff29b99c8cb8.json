{"ast":null,"code":"import axios from \"axios\";\nconst userUrl = 'http://localhost:8090';\nexport const signupCust = async cust => {\n  try {\n    const response = await axios.post(`${userUrl}/cust`, cust);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 409) {\n      console.log('Error while calling signupCust Api ', error.message);\n      throw new Error('Email already exists');\n    } else {\n      console.log('Error while calling signupCust Api ', error.message);\n      throw new Error('Failed to Sign Up. Please try again later.');\n    }\n  }\n};\nexport const getSignin = async email => {\n  email = email || '';\n\n  try {\n    const response = await axios.get(`${userUrl}/cust/${email}`);\n    return response.data;\n  } catch (error) {\n    console.log('Error while calling getCust API:', error.message);\n    throw error;\n  }\n};\nexport const getAdminSignin = async email => {\n  email = email || '';\n\n  try {\n    const response = await axios.get(`${userUrl}/admin/${email}`);\n    return response.data;\n  } catch (error) {\n    console.log('Error while calling getCust API:', error.message);\n    throw error;\n  }\n};\nexport const contactUs = async contact => {\n  try {\n    const response = await axios.post(`${userUrl}/contact`, contact);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 409) {\n      console.log('Error while calling contactUs Api ', error.message);\n      throw new Error('Invalid email address');\n    } else {\n      console.log('Error while calling contactUs Api ', error.message);\n      throw new Error('Failed to send message. Please try again later.');\n    }\n  }\n};\nexport const checkOut = async checkout => {\n  try {\n    const response = await axios.post(`${userUrl}/checkout`, checkout);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 409) {\n      console.log('Error while calling checkOut Api ', error.message);\n      throw new Error('Failed to Order Place. Please try again.');\n    } else {\n      console.log('Error while calling checkOut Api ', error.message);\n      throw new Error('Failed to Order Place. Please try again later.');\n    }\n  }\n};\nexport const addProduct = async product => {\n  try {\n    const response = await axios.post(`${userUrl}/product`, product, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error while calling addProduct API ', error.message);\n    throw new Error('Failed to add product. Please try again later.');\n  }\n};\nexport const fetchContacts = async () => {\n  try {\n    const response = await fetch(`${userUrl}/contacts`);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch data');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n};\nexport const updateQueryStatus = async (queryId, newStatus) => {\n  try {\n    const response = await fetch(`${userUrl}/updateQueryStatus/${queryId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ans: newStatus\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to update query status');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error updating query status:', error);\n    throw error;\n  }\n};\nexport const fetchProducts = async () => {\n  try {\n    const response = await fetch(`${userUrl}/products`);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch data');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n};\nexport const getProduct = async productId => {\n  id = id || '';\n\n  try {\n    return await axios.get(`${userUrl}/product/${productId}`);\n  } catch (error) {\n    console.log('Error while calling getUsers api', error.message);\n  }\n};\nexport const deleteProduct = async productId => {\n  try {\n    const response = await axios.delete(`${userUrl}/product/${productId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error while calling deleteProduct API ', error.message);\n    throw new Error('Failed to delete product. Please try again later.');\n  }\n};\nexport const searchProducts = async query => {\n  try {\n    const response = await axios.get(`${userUrl}/search?query=${query}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error searching products:', error);\n    throw new Error('Failed to search products. Please try again later.');\n  }\n};","map":{"version":3,"names":["axios","userUrl","signupCust","cust","response","post","data","error","status","console","log","message","Error","getSignin","email","get","getAdminSignin","contactUs","contact","checkOut","checkout","addProduct","product","headers","fetchContacts","fetch","ok","json","updateQueryStatus","queryId","newStatus","method","body","JSON","stringify","ans","fetchProducts","getProduct","productId","id","deleteProduct","delete","searchProducts","query"],"sources":["C:/Users/sresh/OneDrive/Desktop/ecom/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\nconst userUrl = 'http://localhost:8090';\r\n\r\nexport const signupCust = async (cust) => {\r\n    try {\r\n        const response = await axios.post(`${userUrl}/cust`, cust);\r\n        return response.data;\r\n    } catch (error) {\r\n        if (error.response && error.response.status === 409) {\r\n            console.log('Error while calling signupCust Api ', error.message);\r\n            throw new Error('Email already exists');\r\n        }\r\n        else {\r\n            console.log('Error while calling signupCust Api ', error.message);\r\n            throw new Error('Failed to Sign Up. Please try again later.');\r\n        }\r\n    }\r\n}\r\n\r\nexport const getSignin = async (email) => {\r\n    email = email || '';\r\n    try {\r\n        const response = await axios.get(`${userUrl}/cust/${email}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling getCust API:', error.message);\r\n        throw error; \r\n    }\r\n}\r\n\r\nexport const getAdminSignin = async (email) => {\r\n    email = email || '';\r\n    try {\r\n        const response = await axios.get(`${userUrl}/admin/${email}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling getCust API:', error.message);\r\n        throw error; \r\n    }\r\n}\r\n\r\nexport const contactUs = async (contact) => {\r\n    try {\r\n        const response = await axios.post(`${userUrl}/contact`, contact);\r\n        return response.data;\r\n    } catch (error) {\r\n        if (error.response && error.response.status === 409) {\r\n            console.log('Error while calling contactUs Api ', error.message);\r\n            throw new Error('Invalid email address');\r\n        } else {\r\n            console.log('Error while calling contactUs Api ', error.message);\r\n            throw new Error('Failed to send message. Please try again later.');\r\n        }\r\n    }\r\n}\r\n\r\nexport const checkOut = async (checkout) => {\r\n    try {\r\n        const response = await axios.post(`${userUrl}/checkout`, checkout);\r\n        return response.data;\r\n    } catch (error) {\r\n        if (error.response && error.response.status === 409) {\r\n            console.log('Error while calling checkOut Api ', error.message);\r\n            throw new Error('Failed to Order Place. Please try again.');\r\n        } \r\n        else {\r\n            console.log('Error while calling checkOut Api ', error.message);\r\n            throw new Error('Failed to Order Place. Please try again later.');\r\n        }\r\n    }\r\n}\r\n\r\nexport const addProduct = async (product) => {\r\n    try {\r\n        const response = await axios.post(`${userUrl}/product`, product, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error while calling addProduct API ', error.message);\r\n        throw new Error('Failed to add product. Please try again later.');\r\n    }\r\n}\r\n\r\nexport const fetchContacts = async () => {\r\n    try {\r\n        const response = await fetch(`${userUrl}/contacts`);\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch data');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateQueryStatus = async (queryId, newStatus) => {\r\n    try {\r\n        const response = await fetch(`${userUrl}/updateQueryStatus/${queryId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ ans: newStatus })\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Failed to update query status');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error updating query status:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const fetchProducts = async () => {\r\n    try {\r\n        const response = await fetch(`${userUrl}/products`);\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch data');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getProduct=async(productId)=>{\r\n    id=id || '';\r\n    try{\r\n        return await axios.get(`${userUrl}/product/${productId}`);\r\n    }catch(error){\r\n        console.log('Error while calling getUsers api',error.message);\r\n    }\r\n}\r\n\r\nexport const deleteProduct = async (productId) => {\r\n    try {\r\n        const response = await axios.delete(`${userUrl}/product/${productId}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error while calling deleteProduct API ', error.message);\r\n        throw new Error('Failed to delete product. Please try again later.');\r\n    }\r\n}\r\n\r\nexport const searchProducts = async (query) => {\r\n    try {\r\n        const response = await axios.get(`${userUrl}/search?query=${query}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error searching products:', error);\r\n        throw new Error('Failed to search products. Please try again later.');\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}