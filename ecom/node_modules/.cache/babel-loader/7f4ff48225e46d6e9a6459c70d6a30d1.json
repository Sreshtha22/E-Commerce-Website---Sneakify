{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sresh\\\\OneDrive\\\\Desktop\\\\ecom\\\\src\\\\components\\\\account\\\\ChangePasswordForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { compose } from \"redux\";\nimport renderFormGroupField from \"../../helpers/renderFormGroupField\";\nimport { required, maxLength20, minLength8 } from \"../../helpers/validation\";\nimport { ReactComponent as IconShieldLock } from \"bootstrap-icons/icons/shield-lock.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangePasswordForm = props => {\n  _s();\n\n  const {\n    submitting,\n    onSubmit,\n    submitFailed\n  } = props;\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [passwordMatchError, setPasswordMatchError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const handleCurrentPasswordChange = e => {\n    setCurrentPassword(e.target.value);\n    setSuccessMessage('');\n  };\n\n  const handleNewPasswordChange = e => {\n    setNewPassword(e.target.value);\n    setSuccessMessage('');\n  };\n\n  const handleConfirmNewPasswordChange = e => {\n    setConfirmNewPassword(e.target.value);\n    setSuccessMessage('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (newPassword !== confirmNewPassword) {\n      setPasswordMatchError(\"New password doesn't match\");\n    } else {\n      setSuccessMessage('Password changed successfully!');\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmNewPassword('');\n      setPasswordMatchError('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      height: \"390px\",\n      borderColor: \"black\",\n      marginTop: \"12px\",\n      height: \"367px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"card-header text-white\",\n      style: {\n        backgroundColor: \"black\",\n        paddingTop: \"10px\",\n        height: \"44px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-key text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), \" \\xA0 Change Password\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: `needs-validation ${submitFailed ? \"was-validated\" : \"\"}`,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"currentPassword\",\n          type: \"password\",\n          label: \"Current Password\",\n          value: currentPassword,\n          onChange: handleCurrentPasswordChange,\n          component: renderFormGroupField,\n          placeholder: \"Enter your current password\",\n          icon: IconShieldLock,\n          validate: [required, maxLength20, minLength8],\n          required: true,\n          maxLength: \"20\",\n          minLength: \"8\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          label: \"New Password\",\n          value: newPassword,\n          onChange: handleNewPasswordChange,\n          component: renderFormGroupField,\n          placeholder: \"Enter new password \",\n          icon: IconShieldLock,\n          validate: [required, maxLength20, minLength8],\n          required: true,\n          maxLength: \"20\",\n          minLength: \"8\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"confirmPassword\",\n          type: \"password\",\n          label: \"Confirm Password\",\n          value: confirmNewPassword,\n          onChange: handleConfirmNewPasswordChange,\n          component: renderFormGroupField,\n          placeholder: \"Confirm new password\",\n          icon: IconShieldLock,\n          validate: [required, maxLength20, minLength8],\n          required: true,\n          maxLength: \"20\",\n          minLength: \"8\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body d-flex\",\n          style: {\n            paddingLeft: \"2px\",\n            paddingTop: \"13px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary  d-flex\",\n            disabled: submitting,\n            style: {\n              background: \"black\",\n              borderColor: \"black\",\n              marginRight: \"15px\"\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), passwordMatchError && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: passwordMatchError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 34\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'green'\n            },\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChangePasswordForm, \"7sKJNeD3oa/txqzLk3NAW4+eVdQ=\");\n\n_c = ChangePasswordForm;\nexport default compose(reduxForm({\n  form: \"changepassword\"\n}))(ChangePasswordForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePasswordForm\");","map":{"version":3,"names":["React","useState","Field","reduxForm","compose","renderFormGroupField","required","maxLength20","minLength8","ReactComponent","IconShieldLock","ChangePasswordForm","props","submitting","onSubmit","submitFailed","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","passwordMatchError","setPasswordMatchError","successMessage","setSuccessMessage","handleCurrentPasswordChange","e","target","value","handleNewPasswordChange","handleConfirmNewPasswordChange","handleSubmit","preventDefault","height","borderColor","marginTop","backgroundColor","paddingTop","paddingLeft","background","marginRight","color","form"],"sources":["C:/Users/sresh/OneDrive/Desktop/ecom/src/components/account/ChangePasswordForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { compose } from \"redux\";\nimport renderFormGroupField from \"../../helpers/renderFormGroupField\";\nimport { required, maxLength20, minLength8 } from \"../../helpers/validation\";\nimport { ReactComponent as IconShieldLock } from \"bootstrap-icons/icons/shield-lock.svg\";\nconst ChangePasswordForm = (props) => {\n  const {submitting, onSubmit, submitFailed } =props;\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [passwordMatchError, setPasswordMatchError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleCurrentPasswordChange = (e) => {\n    setCurrentPassword(e.target.value);\n    setSuccessMessage('');\n  };\n  const handleNewPasswordChange = (e) => {\n    setNewPassword(e.target.value);\n    setSuccessMessage('');\n  };\n  const handleConfirmNewPasswordChange = (e) => {\n    setConfirmNewPassword(e.target.value);\n    setSuccessMessage('');\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (newPassword !== confirmNewPassword) {\n      setPasswordMatchError(\"New password doesn't match\");\n    } else {\n      setSuccessMessage('Password changed successfully!');\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmNewPassword('');\n      setPasswordMatchError('');\n    }\n  };\n  return (\n    <div className=\"card\" style = {{height:\"390px\",borderColor : \"black\",marginTop:\"12px\", height : \"367px\"}}>\n      <h5 className=\"card-header text-white\" style = {{backgroundColor : \"black\",paddingTop:\"10px\",height:\"44px\"}}>\n      <i className=\"bi bi-key text-white\"></i> &nbsp; Change Password\n      </h5>\n      <div className=\"card-body\">\n        <form\n          onSubmit={handleSubmit}\n          className={`needs-validation ${submitFailed ? \"was-validated\" : \"\"}`}\n          noValidate\n        >\n          <Field\n            name=\"currentPassword\"\n            type=\"password\"\n            label=\"Current Password\"\n            value={currentPassword}\n            onChange={handleCurrentPasswordChange}\n            component={renderFormGroupField}\n            placeholder=\"Enter your current password\"\n            icon={IconShieldLock}\n            validate={[required, maxLength20, minLength8]}\n            required={true}\n            maxLength=\"20\"\n            minLength=\"8\"\n            className=\"mb-3\"\n          />\n          <Field\n            name=\"password\"\n            type=\"password\"\n            label=\"New Password\"\n            value={newPassword}\n            onChange={handleNewPasswordChange}\n            component={renderFormGroupField}\n            placeholder=\"Enter new password \"\n            icon={IconShieldLock}\n            validate={[required, maxLength20, minLength8]}\n            required={true}\n            maxLength=\"20\"\n            minLength=\"8\"\n            className=\"mb-3\"\n          />\n          <Field\n            name=\"confirmPassword\"\n            type=\"password\"\n            label=\"Confirm Password\"\n            value={confirmNewPassword}\n            onChange={handleConfirmNewPasswordChange}\n            component={renderFormGroupField}\n            placeholder=\"Confirm new password\"\n            icon={IconShieldLock}\n            validate={[required, maxLength20, minLength8]}\n            required={true}\n            maxLength=\"20\"\n            minLength=\"8\"\n            className=\"mb-3\"\n          />\n          <div className=\"card-body d-flex\" style={{paddingLeft:\"2px\",paddingTop:\"13px\"}} >\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary  d-flex\"\n            disabled={submitting}\n            style={{background : \"black\", borderColor : \"black\", marginRight : \"15px\"}}\n          >\n            Save\n          </button>\n          {passwordMatchError && <p style={{ color: 'red' }}>{passwordMatchError}</p>}\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n        </div>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default compose(\n  reduxForm({\n    form: \"changepassword\",\n  })\n)(ChangePasswordForm);"],"mappings":"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"},"metadata":{},"sourceType":"module"}