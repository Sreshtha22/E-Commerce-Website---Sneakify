{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sresh\\\\OneDrive\\\\Desktop\\\\ecom\\\\src\\\\components\\\\account\\\\ChangePasswordForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { compose } from \"redux\";\nimport renderFormGroupField from \"../../helpers/renderFormGroupField\";\nimport { required, maxLength20, minLength8 } from \"../../helpers/validation\";\nimport { changePassword } from \"../../api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangePasswordForm = props => {\n  _s();\n\n  const {\n    submitting,\n    onSubmit,\n    submitFailed\n  } = props;\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [passwordMatchError, setPasswordMatchError] = useState('');\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const handleCurrentPasswordChange = e => {\n    setCurrentPassword(e.target.value);\n    setSuccessMessage('');\n  };\n\n  const handleNewPasswordChange = e => {\n    setNewPassword(e.target.value);\n    setSuccessMessage('');\n  };\n\n  const handleConfirmNewPasswordChange = e => {\n    setConfirmNewPassword(e.target.value);\n    setSuccessMessage('');\n  };\n\n  const handleSubmit = async formData => {\n    const allFieldsFilled = Object.values(formData).every(value => value.trim() !== '');\n\n    if (!allFieldsFilled) {\n      return;\n    } else if (newPassword !== confirmNewPassword) {\n      setPasswordMatchError(\"New password doesn't match\");\n    } else {\n      try {\n        const userData = localStorage.getItem('data');\n        const response = await changePassword(userData, formData.currentPassword, formData.password);\n        console.log(\"Response : \", response);\n        setSuccess(\"Password updated successfully!\");\n        setError(false);\n        setTimeout(() => {\n          setSuccess(false);\n          props.reset();\n        }, 2000);\n      } catch (error) {\n        console.error('Error changing password:', error.response.data);\n        setPasswordMatchError(error.response.data.message);\n        setSuccessMessage('');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      height: \"390px\",\n      borderColor: \"black\",\n      marginTop: \"12px\",\n      height: \"390px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"card-header text-white\",\n      style: {\n        backgroundColor: \"black\",\n        paddingTop: \"10px\",\n        height: \"44px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-key text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), \" \\xA0 Change Password\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: `needs-validation ${submitFailed ? \"was-validated\" : \"\"}`,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"currentPassword\",\n          type: \"password\",\n          label: \"Current Password\",\n          value: currentPassword,\n          onChange: handleCurrentPasswordChange,\n          component: renderFormGroupField,\n          placeholder: \"Enter your current password\",\n          validate: [required, maxLength20, minLength8],\n          required: true,\n          maxLength: \"20\",\n          minLength: \"8\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          label: \"New Password\",\n          value: newPassword,\n          onChange: handleNewPasswordChange,\n          component: renderFormGroupField,\n          placeholder: \"Enter new password \",\n          validate: [required, maxLength20, minLength8],\n          required: true,\n          maxLength: \"20\",\n          minLength: \"8\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"confirmPassword\",\n          type: \"password\",\n          label: \"Confirm Password\",\n          value: confirmNewPassword,\n          onChange: handleConfirmNewPasswordChange,\n          component: renderFormGroupField,\n          placeholder: \"Confirm new password\",\n          validate: [required, maxLength20, minLength8],\n          required: true,\n          maxLength: \"20\",\n          minLength: \"8\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body d-flex\",\n          style: {\n            paddingLeft: \"2px\",\n            paddingTop: \"13px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary  d-flex\",\n            disabled: submitting,\n            style: {\n              background: \"black\",\n              borderColor: \"black\",\n              marginRight: \"15px\"\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), passwordMatchError && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: passwordMatchError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 36\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'green'\n            },\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChangePasswordForm, \"h8D3TNrdAm8azRFM17ZrEEi3kUA=\");\n\n_c = ChangePasswordForm;\nexport default compose(reduxForm({\n  form: \"changepassword\"\n}))(ChangePasswordForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePasswordForm\");","map":{"version":3,"names":["React","useState","Field","reduxForm","compose","renderFormGroupField","required","maxLength20","minLength8","changePassword","ChangePasswordForm","props","submitting","onSubmit","submitFailed","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","passwordMatchError","setPasswordMatchError","error","setError","success","setSuccess","handleCurrentPasswordChange","e","target","value","setSuccessMessage","handleNewPasswordChange","handleConfirmNewPasswordChange","handleSubmit","formData","allFieldsFilled","Object","values","every","trim","userData","localStorage","getItem","response","password","console","log","setTimeout","reset","data","message","height","borderColor","marginTop","backgroundColor","paddingTop","paddingLeft","background","marginRight","color","successMessage","form"],"sources":["C:/Users/sresh/OneDrive/Desktop/ecom/src/components/account/ChangePasswordForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { compose } from \"redux\";\nimport renderFormGroupField from \"../../helpers/renderFormGroupField\";\nimport { required, maxLength20, minLength8 } from \"../../helpers/validation\";\nimport { changePassword } from \"../../api.js\";\nconst ChangePasswordForm = (props) => {\n  const { submitting, onSubmit, submitFailed } = props;\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [passwordMatchError, setPasswordMatchError] = useState('');\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const handleCurrentPasswordChange = (e) => {\n    setCurrentPassword(e.target.value);\n    setSuccessMessage('');\n  };\n  const handleNewPasswordChange = (e) => {\n    setNewPassword(e.target.value);\n    setSuccessMessage('');\n  };\n  const handleConfirmNewPasswordChange = (e) => {\n    setConfirmNewPassword(e.target.value);\n    setSuccessMessage('');\n  };\n  const handleSubmit = async (formData) => {\n    const allFieldsFilled = Object.values(formData).every(value => value.trim() !== '');\n    if (!allFieldsFilled) {\n      return;\n    }\n    else if (newPassword !== confirmNewPassword) {\n      setPasswordMatchError(\"New password doesn't match\");\n    } else {\n      try {\n        const userData = localStorage.getItem('data');\n        const response = await changePassword(userData, formData.currentPassword, formData.password);\n        console.log(\"Response : \", response);\n        setSuccess(\"Password updated successfully!\");\n        setError(false);\n        setTimeout(() => {\n          setSuccess(false);\n          props.reset();\n        }, 2000);\n      } catch (error) {\n        console.error('Error changing password:', error.response.data);\n        setPasswordMatchError(error.response.data.message);\n        setSuccessMessage('');\n      }\n    }\n  };\n\n  return (\n    <div className=\"card\" style={{ height: \"390px\", borderColor: \"black\", marginTop: \"12px\", height: \"390px\" }}>\n      <h5 className=\"card-header text-white\" style={{ backgroundColor: \"black\", paddingTop: \"10px\", height: \"44px\" }}>\n        <i className=\"bi bi-key text-white\"></i> &nbsp; Change Password\n      </h5>\n      <div className=\"card-body\">\n        <form\n          onSubmit={handleSubmit}\n          className={`needs-validation ${submitFailed ? \"was-validated\" : \"\"}`}\n          noValidate\n        >\n          <Field\n            name=\"currentPassword\"\n            type=\"password\"\n            label=\"Current Password\"\n            value={currentPassword}\n            onChange={handleCurrentPasswordChange}\n            component={renderFormGroupField}\n            placeholder=\"Enter your current password\"\n            validate={[required, maxLength20, minLength8]}\n            required={true}\n            maxLength=\"20\"\n            minLength=\"8\"\n            className=\"mb-3\"\n          />\n          <Field\n            name=\"password\"\n            type=\"password\"\n            label=\"New Password\"\n            value={newPassword}\n            onChange={handleNewPasswordChange}\n            component={renderFormGroupField}\n            placeholder=\"Enter new password \"\n            validate={[required, maxLength20, minLength8]}\n            required={true}\n            maxLength=\"20\"\n            minLength=\"8\"\n            className=\"mb-3\"\n          />\n          <Field\n            name=\"confirmPassword\"\n            type=\"password\"\n            label=\"Confirm Password\"\n            value={confirmNewPassword}\n            onChange={handleConfirmNewPasswordChange}\n            component={renderFormGroupField}\n            placeholder=\"Confirm new password\"\n            validate={[required, maxLength20, minLength8]}\n            required={true}\n            maxLength=\"20\"\n            minLength=\"8\"\n            className=\"mb-3\"\n          />\n          <div className=\"card-body d-flex\" style={{ paddingLeft: \"2px\", paddingTop: \"13px\" }} >\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary  d-flex\"\n              disabled={submitting}\n              style={{ background: \"black\", borderColor: \"black\", marginRight: \"15px\" }}\n            >\n              Save\n            </button>\n            {passwordMatchError && <p style={{ color: 'red' }}>{passwordMatchError}</p>}\n            {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default compose(\n  reduxForm({\n    form: \"changepassword\",\n  })\n)(ChangePasswordForm);"],"mappings":"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"},"metadata":{},"sourceType":"module"}