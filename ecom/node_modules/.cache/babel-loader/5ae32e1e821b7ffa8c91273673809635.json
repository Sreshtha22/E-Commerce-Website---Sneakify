{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sresh\\\\OneDrive\\\\Desktop\\\\ecom\\\\src\\\\components\\\\account\\\\SignInAdminForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { compose } from \"redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport renderFormGroupField from \"../../helpers/renderFormGroupField\";\nimport { required, maxLength20, minLength8 } from \"../../helpers/validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignInAdminForm = props => {\n  _s();\n\n  const {\n    handleSubmit,\n    submitting,\n    submitFailed\n  } = props;\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n\n  const onSubmit = formData => {\n    console.log(\"Form data:\", formData); // Check form data\n    // Check if email and password match the required credentials\n\n    if (formData.email === \"sneakify05@gmail.com\" && formData.password === \"#Sneakify@5\") {\n      // Redirect to admin dashboard upon successful sign-in\n      console.log(\"Successful login\"); // Check if login is successful\n\n      history.push(\"/account/admindash\");\n    } else {\n      // Set error message for incorrect credentials\n      console.log(\"Incorrect login\"); // Check if login fails\n\n      setErrorMessage(\"Incorrect Email or Password\");\n    }\n  };\n\n  console.log(\"Error message:\", errorMessage);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: `needs-validation ${submitFailed ? \"was-validated\" : \"\"}`,\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      name: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      title: \"Please enter your valid email address\",\n      component: renderFormGroupField,\n      placeholder: \"Enter valid email address\",\n      validate: [required],\n      required: true,\n      pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\",\n      className: \"mb-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      title: \"Please enter your password\",\n      pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}\",\n      component: renderFormGroupField,\n      placeholder: \"Enter your password\",\n      validate: [required, maxLength20, minLength8],\n      required: true,\n      maxLength: \"20\",\n      minLength: \"8\",\n      className: \"mb-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-danger\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-dark mb-3\",\n        disabled: submitting,\n        style: {\n          background: \"black\",\n          borderColor: \"black\"\n        },\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clearfix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignInAdminForm, \"qB9rPIEqMnN1mhooqU3a2TviO2E=\", true);\n\n_c = SignInAdminForm;\nexport default compose(reduxForm({\n  form: \"signinadmin\"\n}))(SignInAdminForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInAdminForm\");","map":{"version":3,"names":["React","useState","Field","reduxForm","compose","useNavigate","renderFormGroupField","required","maxLength20","minLength8","SignInAdminForm","props","handleSubmit","submitting","submitFailed","errorMessage","setErrorMessage","history","useHistory","onSubmit","formData","console","log","email","password","push","background","borderColor","form"],"sources":["C:/Users/sresh/OneDrive/Desktop/ecom/src/components/account/SignInAdminForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { compose } from \"redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport renderFormGroupField from \"../../helpers/renderFormGroupField\";\r\nimport {\r\n  required,\r\n  maxLength20,\r\n  minLength8,\r\n} from \"../../helpers/validation\";\r\nconst SignInAdminForm = (props) => {\r\n  const { handleSubmit, submitting, submitFailed } = props;\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n\r\n  const onSubmit = (formData) => {\r\n    console.log(\"Form data:\", formData); // Check form data\r\n    // Check if email and password match the required credentials\r\n    if (formData.email === \"sneakify05@gmail.com\" && formData.password === \"#Sneakify@5\") {\r\n      // Redirect to admin dashboard upon successful sign-in\r\n      console.log(\"Successful login\"); // Check if login is successful\r\n      history.push(\"/account/admindash\");\r\n    } else {\r\n      // Set error message for incorrect credentials\r\n      console.log(\"Incorrect login\"); // Check if login fails\r\n      setErrorMessage(\"Incorrect Email or Password\");\r\n    }\r\n  };\r\n  console.log(\"Error message:\", errorMessage);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(onSubmit)}\r\n      className={`needs-validation ${submitFailed ? \"was-validated\" : \"\"}`}\r\n      noValidate\r\n    >\r\n      <Field\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        type = \"email\"\r\n        title=\"Please enter your valid email address\"\r\n        component={renderFormGroupField}\r\n        placeholder=\"Enter valid email address\"\r\n        validate={[required]}\r\n        required={true}\r\n        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n        className=\"mb-3\"\r\n      />\r\n      <Field\r\n        name=\"password\"\r\n        type=\"password\"\r\n        label=\"Password\"\r\n        title=\"Please enter your password\"\r\n        pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}\"\r\n        component={renderFormGroupField}\r\n        placeholder=\"Enter your password\"\r\n        validate={[required, maxLength20, minLength8]}\r\n        required={true}\r\n        maxLength=\"20\"\r\n        minLength=\"8\"\r\n        className=\"mb-3\"\r\n      />\r\n       {errorMessage && <div className=\"text-danger\">{errorMessage}</div>}\r\n      <div className=\"d-grid\"><br></br>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-dark mb-3\"\r\n          disabled={submitting}\r\n          style={{background : \"black\", borderColor : \"black\"}}\r\n        >\r\n          Sign In\r\n        </button>\r\n      </div>\r\n      <div className=\"clearfix\"></div>\r\n      <div className=\"row\">\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default compose(\r\n  reduxForm({\r\n    form: \"signinadmin\",\r\n  })\r\n)(SignInAdminForm);"],"mappings":"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"},"metadata":{},"sourceType":"module"}