{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sresh\\\\OneDrive\\\\Desktop\\\\ecom\\\\src\\\\components\\\\SearchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { searchProducts } from \"./api\"; // Import the searchProducts function from your API file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResults = () => {\n  _s();\n\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const query = queryParams.get(\"query\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true); // State to track loading state\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true); // Set loading state to true while fetching data\n        // Fetch search results from the backend API using the searchProducts function\n\n        const data = await searchProducts(query);\n        setSearchResults(data);\n        setLoading(false); // Set loading state to false after fetching data\n      } catch (error) {\n        console.error(\"Error fetching search results:\", error); // Handle error here, e.g., show an error message to the user\n\n        setLoading(false); // Set loading state to false in case of error\n      }\n    };\n\n    if (query) {\n      fetchData(); // Call fetchData only if query is present\n    } else {\n      setSearchResults([]); // Clear search results if query is not present\n    }\n  }, [query]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this); // Show a loading indicator while fetching data\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Search Results for \\\"\", query, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: product.name\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) // Render more details about the product here\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchResults, \"Myaru5QRFPiYqGcggwhb/40OTa0=\", false, function () {\n  return [useLocation];\n});\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","searchProducts","SearchResults","location","queryParams","URLSearchParams","search","query","get","searchResults","setSearchResults","loading","setLoading","fetchData","data","error","console","map","product","name","id"],"sources":["C:/Users/sresh/OneDrive/Desktop/ecom/src/components/SearchResults.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { searchProducts } from \"./api\"; // Import the searchProducts function from your API file\r\n\r\nconst SearchResults = () => {\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const query = queryParams.get(\"query\");\r\n\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [loading, setLoading] = useState(true); // State to track loading state\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true); // Set loading state to true while fetching data\r\n        // Fetch search results from the backend API using the searchProducts function\r\n        const data = await searchProducts(query);\r\n        setSearchResults(data);\r\n        setLoading(false); // Set loading state to false after fetching data\r\n      } catch (error) {\r\n        console.error(\"Error fetching search results:\", error);\r\n        // Handle error here, e.g., show an error message to the user\r\n        setLoading(false); // Set loading state to false in case of error\r\n      }\r\n    };\r\n\r\n    if (query) {\r\n      fetchData(); // Call fetchData only if query is present\r\n    } else {\r\n      setSearchResults([]); // Clear search results if query is not present\r\n    }\r\n  }, [query]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Show a loading indicator while fetching data\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Search Results for \"{query}\"</h2>\r\n      <ul>\r\n        {searchResults.map((product) => (\r\n          <li key={product.id}>{product.name}</li>\r\n          // Render more details about the product here\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,OAA/B,C,CAAwC;;;;AAExC,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAMI,WAAW,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB;EACA,MAAMC,KAAK,GAAGH,WAAW,CAACI,GAAZ,CAAgB,OAAhB,CAAd;EAEA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC,CAN0B,CAMoB;;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,YAAY;MAC5B,IAAI;QACFD,UAAU,CAAC,IAAD,CAAV,CADE,CACgB;QAClB;;QACA,MAAME,IAAI,GAAG,MAAMb,cAAc,CAACM,KAAD,CAAjC;QACAG,gBAAgB,CAACI,IAAD,CAAhB;QACAF,UAAU,CAAC,KAAD,CAAV,CALE,CAKiB;MACpB,CAND,CAME,OAAOG,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,gCAAd,EAAgDA,KAAhD,EADc,CAEd;;QACAH,UAAU,CAAC,KAAD,CAAV,CAHc,CAGK;MACpB;IACF,CAZD;;IAcA,IAAIL,KAAJ,EAAW;MACTM,SAAS,GADA,CACI;IACd,CAFD,MAEO;MACLH,gBAAgB,CAAC,EAAD,CAAhB,CADK,CACiB;IACvB;EACF,CApBQ,EAoBN,CAACH,KAAD,CApBM,CAAT;;EAsBA,IAAII,OAAJ,EAAa;IACX,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP,CADW,CACmB;EAC/B;;EAED,oBACE;IAAA,wBACE;MAAA,oCAAyBJ,KAAzB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UACGE,aAAa,CAACQ,GAAd,CAAmBC,OAAD,iBACjB;QAAA,UAAsBA,OAAO,CAACC;MAA9B,GAASD,OAAO,CAACE,EAAjB;QAAA;QAAA;QAAA;MAAA,QADiB,CAEjB;MAFD;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CA7CD;;GAAMlB,a;UACaF,W;;;KADbE,a;AA+CN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}