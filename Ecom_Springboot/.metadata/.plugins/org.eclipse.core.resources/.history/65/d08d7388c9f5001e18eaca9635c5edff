package com.example.ecom.model;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.engine.spi.SharedSessionContractImplementor;
import org.hibernate.id.IdentifierGenerator;

import java.io.Serializable;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

@Entity
public class Customer {
    @Id
    private String email;

    private String id;
    private String name;
    private String phno;
    private String password;
    private String sqstn;
    private String ans;

    public Customer() {
        // Default constructor
    }

    public Customer(String name, String email, String phno, String password, String sqstn, String ans) {
        this.name = name;
        this.email = email;
        this.phno = phno;
        this.password = password;
        this.sqstn = sqstn;
        this.ans = ans;
        // Generate custom ID when creating new instance
        generateCustomId();
    }

    private void generateCustomId() {
        String prefix = "c";
        int maxId = 0;
        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet = null;

        try {
            // Obtain database connection
            connection = HibernateUtil.getSession().connection();
            // Execute SQL query to get maximum ID
            statement = connection.createStatement();
            resultSet = statement.executeQuery("SELECT MAX(id) AS MaxId FROM Customer");

            // Get the maximum ID from the result set
            if (resultSet.next()) {
                maxId = resultSet.getInt("MaxId");
            }

            // Increment the maximum ID to generate the next ID
            int nextId = maxId + 1;

            // Set the id with the custom format
            this.id = prefix + nextId;
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                // Close result set, statement, and connection
                if (resultSet != null) resultSet.close();
                if (statement != null) statement.close();
                if (connection != null) connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    // Getters and setters

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getPhno() {
        return phno;
    }

    public void setPhno(String phno) {
        this.phno = phno;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getSqstn() {
        return sqstn;
    }

    public void setSqstn(String sqstn) {
        this.sqstn = sqstn;
    }

    public String getAns() {
        return ans;
    }

    public void setAns(String ans) {
        this.ans = ans;
    }

    @Override
    public String toString() {
        return "Customer [id=" + id + ", email=" + email + ", name=" + name + ", phno=" + phno + ", password=" + password + ", sqstn=" + sqstn + ", ans=" + ans + "]";
    }
}
